/* Don't touch this START */
.container {
  padding: 8px;
  border: 2px dotted lightblue;
}

.logo {
  min-width: 40px;
  min-height: 40px;
  border: 2px dotted turquoise;
}

.box {
  min-width: 40px;
  min-height: 40px;
  padding: 4px;
  border: 2px dotted lightcoral;
}

.inner-box {
  min-width: 40px;
  min-height: 40px;
  padding: 4px;
  border: 2px dotted lightgreen;
}

.inner-logo {
  min-width: 36px;
  min-height: 36px;
  border: 2px dotted turquoise;
}
/* Don't touch this END */

/* Write CSS Below Here */
/*
1. Practice re-using classes
2. You cannot add new classes (since the HTML must not be changed)
3. You can make new selectors / combinators in this file though:
    https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors
*/
:root {
  --cl-gap: 1rem;
}
.two-column-grid__expand-two {
  display: grid;
  grid-template-columns: 200px 1fr;
  column-gap: var(--cl-gap);
}

.three-column-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: var(--cl-gap) * 2;
}

.three-column-grid__expand-two {
  display: grid;
  grid-template-columns: auto 1fr auto;
  column-gap: var(--cl-gap);
}

.five-column-grid {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  column-gap: var(--cl-gap);
}

.center-grid {
  display: grid;
  justify-content: center;
}
.centered {
  width: 250px;
}

.grid-in-grid-1 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: var(--cl-gap);
}
.grid-in-grid-1 .box:nth-child(1) {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: var(--cl-gap);
}
.grid-in-grid-1 .box:nth-child(2) {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  column-gap: var(--cl-gap);
}

.grid-in-grid-2 {
  display: grid;
  grid-template-columns: 0.3fr 3fr 1fr;
  column-gap: var(--cl-gap);
}
.grid-in-grid-2 .box:nth-child(3) {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: var(--cl-gap) / 2;
}
.grid-madness {
  display: grid;
  grid-template-areas:
    "header header header"
    "s-bar content s-bar-right"
    "footer footer footer";
  grid-template-columns: 1fr 5fr 1fr;
  grid-template-rows: 1fr 6fr 1.8fr;
  gap: var(--cl-gap);
}
.grid-madness .box:nth-child(1) {
  display: grid;
  grid-area: footer;
  justify-content: end;
  grid-template-columns: repeat(2, 200px) 100px;
  gap: var(--cl-gap);
}
.grid-madness .box:nth-child(3) {
  display: grid;
  gap: var(--cl-gap) * 3;
  grid-area: s-bar;
  grid-template-rows: repeat(3, 30px);
}
.grid-madness .box:nth-child(2) {
  grid-template-rows: 75%;
  grid-area: s-bar-right;
  display: grid;
}
.grid-madness .box:nth-child(5) {
  display: grid;
  grid-area: header;
  grid-template-columns: 100px repeat(4, 175px);
  gap: var(--cl-gap);
}
.grid-madness .box:nth-child(5) .inner-box:nth-child(3) {
  display: grid;
  grid-area: 1;
}
.grid-madness .box:nth-child(1) .inner-box:nth-child(2) {
  display: grid;
  grid-area: 1 / 3;
}
.grid-madness .box:nth-child(4) .inner-box {
  display: grid;
  grid-template-columns: inherit;
  justify-content: start;
}
